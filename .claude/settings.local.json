{
  "permissions": {
    "allow": [
      "Bash(cd:*)",
      "Bash(cd:*)",
      "Bash(cd:*)",
      "Bash(cd:*)",
      "Bash(cd:*)",
      "Bash(cd:*)",
      "Bash(cd:*)",
      "Bash(cd:*)",
      "Bash(cd:*)",
      "Bash(cd:*)",
      "Bash(cd:*)",
      "Bash(cd:*)",
      "Bash(cd:*)",
      "Bash(cd:*)",
      "Bash(cd:*)",
      "Bash(cd:*)",
      "Bash(cd:*)",
      "Bash(cd:*)",
      "Bash(cd:*)",
      "Bash(cd:*)",
      "Bash(cd:*)",
      "Bash(cd:*)",
      "Bash(cd:*)",
      "Bash(cd:*)",
      "Bash(cd:*)",
      "Bash(cd:*)",
      "Bash(cmake:*)",
      "Bash(make:*)",
      "Bash(cd:*)",
      "Bash(cd:*)",
      "Bash(cd:*)",
      "Bash(cd:*)",
      "Bash(cd:*)",
      "Bash(cd:*)",
      "Bash(gcc:*)",
      "Bash(cd:*)",
      "Bash(cd:*)",
      "Bash(cd:*)",
      "Bash(cd:*)",
      "Bash(cd:*)",
      "Bash(cd:*)",
      "Bash(cd:*)",
      "Bash(cd:*)",
      "Bash(apt-get:*)",
      "Bash(apt-get install:*)",
      "Bash(cd:*)",
      "Bash(cd:*)",
      "Bash(cd:*)",
      "Bash(cd:*)",
      "Bash(./nesting_test)",
      "Bash(python3:*)",
      "Bash(ldd:*)",
      "Bash(export:*)",
      "Bash(python:*)",
      "Bash(pip install:*)",
      "Bash(/dev/null)",
      "Bash(sed:*)",
      "Read(/mnt/c/Users/bruno/Desktop/ncc-new/**)",
      "Read(/mnt/c/Users/bruno/Desktop/ncc-new/**)",
      "Bash(./standalone)",
      "Bash(source:*)",
      "Bash(sudo apt:*)",
      "Bash(sudo apt install:*)",
      "Bash(./test_angles)",
      "Bash(./test_input_shapes)",
      "Bash(./nesting_algorithm)",
      "Bash(./nesting_algorithm_improved)",
      "Bash(./nesting_algorithm_optimized)",
      "Bash(timeout:*)",
      "Bash(./nesting_improved)",
      "Bash(./nesting_algorithm_final)",
      "Bash(./nesting_fixed)",
      "Bash(./nesting_ultimate)",
      "Bash(./nesting_ultimate_fix)",
      "Bash(./nesting_debug:*)",
      "Bash(./nesting_improved input_shapes.json)",
      "Bash(./intelligent_nesting)",
      "Bash(./test_positioning)",
      "Bash(./test_nesting)",
      "Read(//mnt/c/Users/bruno/Desktop/ncc-new/**)",
      "Bash(./test_large_piece)",
      "Bash(./debug_large_piece)",
      "Bash(./test_single_large_piece)",
      "Bash(./nesting)",
      "Bash(./debug)",
      "Bash(./debug_real)",
      "Bash(./full_diagnostic)",
      "Bash(time:*)",
      "Bash(./intelligent_nesting_optimized)",
      "Bash(./intelligent_nesting_ultra:*)",
      "Bash(./intelligent_nesting_multi_strategy:*)",
      "Bash(ls:*)",
      "Bash(awk:*)",
      "Bash(./intelligent_nesting_multi_strategy_fast:*)",
      "Bash(./intelligent_repositioning:*)",
      "Bash(echo \"EXIT CODE: $?\")",
      "Bash(./aggressive_repositioning:*)",
      "Bash(pkill:*)",
      "Read(//tmp/**)",
      "Bash(cat:*)",
      "Bash(chmod:*)",
      "Bash(./verify_pieces.sh:*)",
      "Bash(paste:*)",
      "WebSearch",
      "WebFetch(domain:github.com)",
      "Bash(g++:*)",
      "Bash(dpkg:*)",
      "Bash(sudo apt-get update:*)",
      "Read(//usr/include/**)",
      "Bash(/mnt/c/Users/bruno/Desktop/ncc-atual/check_dependencies.sh:*)",
      "Bash(git --version)",
      "Bash(bash:*)",
      "Bash(tee:*)",
      "Bash(git config:*)",
      "Bash(curl:*)",
      "Bash(GIT_TERMINAL_PROMPT=0 git ls-remote https://github.com/tamasmeszaros/clipper.git HEAD)",
      "Bash(git ls-remote:*)",
      "Read(//home/bruno/**)",
      "Bash(ping:*)",
      "Bash(nslookup:*)",
      "Bash(for repo in \"tamasmeszaros/clipper\" \"angelopoole/Clipper\" \"Clipper2/Clipper2Lib\" \"polyclipping/clipper\")",
      "Bash(do echo \"Checking: $repo\")",
      "Bash(done)",
      "Bash(apt-cache:*)",
      "Bash(./build/intelligent_nesting_libnest2d:*)",
      "Bash(./intelligent_nesting_libnest2d)",
      "Bash(./build/intelligent_nesting:*)",
      "Bash(./genetic_nesting_fixed:*)",
      "Bash(./check_missing_piece)",
      "Bash(./hybrid_nesting)",
      "Bash(./genetic_nesting_optimized:*)",
      "Bash(xargs -r kill -9)",
      "Bash(./test_ga_quick)",
      "Bash(if [ -f input_shapes.json ])",
      "Bash(then grep -o '\"\"\"\"peaces\"\"\"\"' input_shapes.json)",
      "Bash(else echo \"Arquivo n√£o encontrado\")",
      "Bash(fi)",
      "Read(//mnt/c/Users/bruno/Desktop/ncc-atual/**)",
      "Bash(readelf:*)",
      "Bash(objdump:*)",
      "Bash(x86_64-w64-mingw32-gcc:*)",
      "Bash(command:*)"
    ],
    "deny": [],
    "ask": []
  }
}
